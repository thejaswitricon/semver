name: Semantic Release for Apps

on:
  push:
    branches:
      - master
    # paths:
    #   - 'modules/**'
  workflow_run:
    workflows: ["My Workflow"]
    types:
      - completed  
  
permissions: write-all

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        id: checkout
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_GITHUB2 }}

      # Step 1: Get the name of the folder that had the changes
      - name: Get changed directories
        id: changed_dirs
        run: |
          CHANGED_DIRS=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | awk -F/ 'BEGIN{OFS=FS} NF--')
          if [[ -z $CHANGED_DIRS ]]; then
            echo "::set-output name=dirs::"
          else
            echo "::set-output name=dirs::$CHANGED_DIRS"
          fi

      - name: Check folder with semver.yml
        id: check_folder
        run: |
          CHANGED_DIRS="${{ steps.changed_dirs.outputs.dirs }}"
          echo "CHANGED_DIRS: $CHANGED_DIRS"  # Debugging line
          if [[ -z $CHANGED_DIRS ]]; then
            echo "::set-output name=consider_folder::"
          else
            SEMVER_PATTERNS=$(cat .github/semver.yml)
            echo "SEMVER_PATTERNS: $SEMVER_PATTERNS"
            PATTERNS=()
            while IFS= read -r LINE; do
              if [[ $LINE == -* ]]; then
                FOLDER=$(echo "$LINE" | sed 's/^- //')
                PATTERNS+=("$FOLDER")
              fi
            done <<< "$SEMVER_PATTERNS"
            echo "PATTERNS: ${PATTERNS[*]}"
            MATCHED_FOLDER=""
            for PATTERN in "${PATTERNS[@]}"; do
              if [[ $CHANGED_DIRS == $PATTERN ]]; then
                MATCHED_FOLDER=$CHANGED_DIRS
                break
              fi
            done
            if [[ -n $MATCHED_FOLDER ]]; then
              echo "::set-output name=consider_folder::$CHANGED_DIRS"
            else
              echo "No matching folder found in semver.yml. Skipping release."
              return 0
            fi
          fi

          